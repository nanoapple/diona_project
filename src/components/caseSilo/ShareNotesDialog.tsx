
import { useState } from 'react';
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Checkbox } from "@/components/ui/checkbox";
import { Button } from "@/components/ui/button";
import {
  AlertDialog,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
} from "@/components/ui/input-otp";

interface ShareNotesDialogProps {
  isOpen: boolean;
  onOpenChange: (open: boolean) => void;
  shareCode: string;
  setShareCode: (code: string) => void;
  therapistName: string;
  setTherapistName: (name: string) => void;
  hasConsent: boolean;
  setHasConsent: (hasConsent: boolean) => void;
  recipientEmail: string;
  setRecipientEmail: (email: string) => void;
  onShare: () => void;
}

const ShareNotesDialog = ({
  isOpen,
  onOpenChange,
  shareCode,
  setShareCode,
  therapistName,
  setTherapistName,
  hasConsent,
  setHasConsent,
  recipientEmail,
  setRecipientEmail,
  onShare,
}: ShareNotesDialogProps) => {
  return (
    <AlertDialog open={isOpen} onOpenChange={onOpenChange}>
      <AlertDialogContent className="sm:max-w-[425px]">
        <AlertDialogHeader>
          <AlertDialogTitle>Share Clinical Notes</AlertDialogTitle>
          <AlertDialogDescription>
            Please verify your identity and consent to share these notes.
          </AlertDialogDescription>
        </AlertDialogHeader>
        <div className="py-4 space-y-4">
          <div className="space-y-2">
            <Label>Security Code</Label>
            <InputOTP maxLength={6} value={shareCode} onChange={setShareCode}>
              <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
              </InputOTPGroup>
            </InputOTP>
            <p className="text-xs text-muted-foreground">Enter the code from your authenticator app</p>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="therapist-name">Therapist Name</Label>
            <Input 
              id="therapist-name" 
              value={therapistName} 
              onChange={e => setTherapistName(e.target.value)} 
              placeholder="Enter your full name"
            />
          </div>
          
          <div className="flex items-center space-x-2">
            <Checkbox id="consent" checked={hasConsent} onCheckedChange={(checked) => setHasConsent(!!checked)} />
            <label
              htmlFor="consent"
              className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            >
              I consent to share these notes <a href="#" className="text-blue-600 hover:underline">Privacy Policy</a>
            </label>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="recipient-email">Recipient Email</Label>
            <Input 
              id="recipient-email" 
              type="email"
              value={recipientEmail} 
              onChange={e => setRecipientEmail(e.target.value)} 
              placeholder="Enter recipient's email"
              disabled={!hasConsent}
              className={!hasConsent ? "bg-muted cursor-not-allowed" : ""}
            />
          </div>
          
          <div className="rounded-md bg-blue-50 p-3 text-sm text-blue-800">
            <p>The recipient will need the security code generated by the therapist's App to open the sharing link.</p>
          </div>
        </div>
        <AlertDialogFooter>
          <Button variant="outline" onClick={() => onOpenChange(false)}>Cancel</Button>
          <Button onClick={onShare}>Share Notes</Button>
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
  );
};

export default ShareNotesDialog;
